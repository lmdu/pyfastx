name: build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}, ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
        arch: [auto, aarch64]
        exclude:
          - os: macos-10.15
            arch: aarch64

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Set up QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v1

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.12.0
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_SKIP: cp27-* pp*
          CIBW_BUILD_VERBOSITY: 0
          CIBW_BEFORE_BUILD: sqlite3 --version && curl -O http://zlib.net/zlib-1.2.11.tar.gz && tar xzf zlib-1.2.11.tar.gz && cd zlib-1.2.11 && ./configure && make && make install
          CIBW_TEST_COMMAND: cd {project} && python setup.py test
          CIBW_TEST_REQUIRES: pyfaidx==0.5.8
          #CIBW_BUILD_VERBOSITY: 3 for debug

      - name: Display wheel
        run: ls -l wheelhouse

      - name: Upload wheels to artifact
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: python setup.py sdist

      - name: Display dist
        run: ls -l dist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
  
  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          #repository_url: https://test.pypi.org/legacy/
